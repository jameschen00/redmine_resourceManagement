<% content_for :header_tags do %>
    <%= stylesheet_link_tag 'plugin_resource', :plugin => 'resource' %>
    <%= javascript_include_tag 'project.gantt.reallocation.js',  :plugin => 'resource' %>
    <%= stylesheet_link_tag 'chosen.min.css', :plugin => 'resource' %>
    <%= javascript_include_tag 'chosen.jquery.js',  :plugin => 'resource' %>
<% end %>


<h2><%= l(:user_allocation_gantt) %></h2>


<br/>


<!--search filter-->
<%= form_tag({:controller => 'user_allocation_gantt', :action => 'show2',:month => params[:month],
              :year => params[:year], :months => params[:months]},
             :method => :get, :id => 'query_form') do %>
    <%= hidden_field_tag 'set_filter', '1' %>
    <fieldset id="filters" class="collapsible <%= @query.new_record? ? "" : "collapsed" %>">
      <legend onclick="toggleFieldset(this);"><%= l(:filter_issue_label) %></legend>
      <div style="<%= @query.new_record? ? "" : "display: none;" %>">
        <%= render :partial => 'queries/filters', :locals => {:query => @query} %>
      </div>
    </fieldset>

    <!--
    <fieldset><legend><%= l(:filter_user_label) %></legend>
      <label for='status'><%= l(:field_status) %>:</label>
      <%= select_tag 'status', users_status_options_for_select(@status), :class => "small" %>

      <% if @groups.present? %>
          <label for='group_id'><%= l(:label_group) %>:</label>
          <%= select_tag 'group_id', content_tag('option') + options_from_collection_for_select(@groups, :id, :name, params[:group_id].to_i) %>
      <% end %>

      <label for='name'><%= l(:label_user) %>:</label>
      <%= text_field_tag 'name', params[:name], :size => 30 %>
    </fieldset>
    -->

    <p class="buttons">
      <%= text_field_tag 'months', @gantt.months, :size => 2 %>
      <%= l(:label_months_from) %>
      <%= select_month(@gantt.month_from, :prefix => "month", :discard_type => true) %>
      <%= select_year(@gantt.year_from, :prefix => "year", :discard_type => true) %>
      <%= hidden_field_tag 'zoom', @gantt.zoom %>

      <%= link_to_function l(:button_apply), '$("#query_form").submit()',
                           :class => 'icon icon-checked' %>
      <%= link_to l(:button_clear), { :project_id => @project, :set_filter => 1 },
                  :class => 'icon icon-reload' %>
    </p>
<% end %>





<!--chart-->
<div id="jsrm">

</div>

<p class="pagination"><%= pagination_links_full @user_pages %></p>

<!--export-->
<p class="other-formats">
  <%= link_to 'CSV', params.merge(@gantt.params).merge(:format=>'csv'), :title => "Export All Page(s)" %>
  |
  <%= link_to 'XLS', params.merge(@gantt.params).merge(:action=>'user_allocation_gantt_xls'), :title => "Export All Page(s)" %>
</p>


<!--tips-->
<p>
  Tips:
<ul>
  <li>Only <b>
    <%
       trackers = Tracker.where("id in (?)", Setting.plugin_resource['resource_task_tracker']) if Setting.plugin_resource['resource_task_tracker']
       if trackers && trackers.size > 0
    %>
            <%=trackers.all.collect{|t| t.name}.inspect%>
    <%
       end
    %>
    </b> can be shown here.
  </li>
  <li>If estimated hours is 8 hours, allocation <b>cannot</b> be 4 + 5.</li>
  <li>If estimated hours is 8 hours, allocation  can be 1.5 + 6.5</li>
  <li>Users without tasks are hidden.</li>
  <li>Only the issues without child-issue can be set allocation.</li>
</ul>
</p>

<script>
    //<![CDATA[



    $( "#jsrm" ).jsrm({
        data: 'resourcemng_data.json'+window.location.search,
        start_date:'<%=@date_from%>',
        end_date:'<%=@date_to%>',
        onDataReceived: function(data){
        }
    });


    //select tab
    $(".resource").addClass("selected");

    //remove filter: tracker
    $("#add_filter_select option[value='tracker_id']").remove();

    //
    //replace filter's select events
    //
    $(document).ready(function(){
        <%
        @query.filters.each do |field, options|
            if field == "assigned_to_id"    # change assignee to 'chosen'
        %>
        $('#tr_assigned_to_id').remove();//remove the old one
        new_addFilter("<%= field %>", <%= raw_json @query.operator_for(field) %>, <%= raw_json @query.values_for(field) %>);
        <%
            elsif field == "project_id"   # change project to 'chosen'
        %>
        $('#tr_project_id').remove();//remove the old one
        new_addFilter("<%= field %>", <%= raw_json @query.operator_for(field) %>, <%= raw_json @query.values_for(field) %>);
        <%
            end
        end
        %>

    });
    // remove event of dropdown of filter
    $('#add_filter_select').unbind('change');
    $('#add_filter_select').change(function(data){
        if(data.target.value == 'assigned_to_id'){
            // new control
            new_addFilter($(this).val(), '', []);  // assign-to
        }else if(data.target.value == 'project_id'){
            // new control
            new_addFilter($(this).val(), '', []);  // project
        }else{
            // original strategy
            addFilter($(this).val(), '', []);
        }
    });

    function new_addFilter(field, operator, values){
        var fieldId = field.replace('.', '_');
        var tr = $('#tr_'+fieldId);
        if (tr.length > 0) {
            tr.show();
        } else {
            buildAssigneeFilterRow(field, operator, values);
        }
        $('#cb_'+fieldId).attr('checked', true);
        toggleFilter(field);
        $('#add_filter_select').val('').children('option').each(function(){
            if ($(this).attr('value') == field) {
                $(this).attr('disabled', true);
            }
        });
    }

    function buildAssigneeFilterRow(field, operator, values) {
        var fieldId = field.replace('.', '_');
        var filterTable = $("#filters-table");
        var filterOptions = availableFilters[field];
        var operators = operatorByType[filterOptions['type']];
        var filterValues = filterOptions['values'];
        var i, select;
        var tr = $('<tr class="filter" >').attr('id', 'tr_'+fieldId).html(
                '<td class="field" style="padding-top: 5px;padding-bottom: 5px"><input checked="checked" id="cb_'+fieldId+'" name="f[]" value="'+field+'" type="checkbox"><label for="cb_'+fieldId+'"> '+filterOptions['name']+'</label></td>' +
                        '<td class="operator" style="padding-top: 5px;padding-bottom: 5px"><select id="operators_'+fieldId+'" name="op['+field+']"></td>' +
                        '<td class="values" style="padding-top: 5px;padding-bottom: 5px"></td>'
        );
        filterTable.append(tr);
        select = tr.find('td.operator select');
        for (i=0;i<operators.length;i++){
            var option = $('<option>').val(operators[i]).text(operatorLabels[operators[i]]);
            if (operators[i] == operator) {option.attr('selected', true)};
            select.append(option);
        }
        select.change(function(){toggleOperator(field)});
        switch (filterOptions['type']){
            case "list":
            case "list_status":
            case "list_optional":
                tr.find('td.values').append(
                        '<span ><select id="values_'+fieldId+'_1" name="v['+field+'][]" multiple="multiple" style="width:400px" data-placeholder="Please choose..."></select>' +
                                ' </span>'
                );
                select = tr.find('td.values select');
                for (i=0;i<filterValues.length;i++){
                    var filterValue = filterValues[i];
                    var option = $('<option>');
                    if ($.isArray(filterValue)) {
                        option.val(filterValue[1]).text(filterValue[0]);
                        if ($.inArray(filterValue[1], values) > -1) {option.attr('selected', true);}
                    } else {
                        option.val(filterValue).text(filterValue);
                        if ($.inArray(filterValue, values) > -1) {option.attr('selected', true);}
                    }
                    select.append(option);
                }
                $( '#values_'+fieldId+'_1' ).chosen();
                break;
            default:
                // omit..
                break;
        }
    }

    $("#query_form").submit(function(){
        if($("#values_assigned_to_id_1") &&
                !$("#values_assigned_to_id_1").val() &&
                $("#operators_assigned_to_id") &&
                ($("#operators_assigned_to_id").val() == '=' || $("#operators_assigned_to_id").val() == '!')
                ){
            $("#tr_assigned_to_id").remove();
        }
        if($("#values_project_id_1") &&
                !$("#values_project_id_1").val() &&
                $("#operators_assigned_to_id") &&
                ($("#operators_project_id").val() == '=' || $("#operators_project_id").val() == '!')
                ){
            $("#tr_project_id").remove();
        }
    });

    //]]>
</script>

